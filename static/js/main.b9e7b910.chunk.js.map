{"version":3,"sources":["assets/logo.svg","components/common/Select.js","components/common/UpgradeButton.js","constants.js","utils/device-sizes.js","utils.js","SettingsProvider.jsx","ReleaseProvider.jsx","hooks/fetch-release-versions.js","components/common/VersionSelector.js","utils/update-url.js","components/common/Diff/DiffCommentReminder.js","components/common/DownloadFileButton.js","components/common/ViewFileButton.js","components/common/Diff/DiffHeader.js","components/common/Markdown.js","components/common/Diff/DiffComment.js","components/common/Diff/Diff.js","components/common/Diff/DiffSection.js","components/common/Diff/DiffLoading.js","components/common/UpgradeSupportAlert.js","components/common/UsefulContentSection.js","components/common/BinaryDownload.js","components/common/Diff/DiffViewStyleOptions.js","components/common/CompletedFilesCounter.js","components/common/RawDiffLinkButton.js","hooks/fetch-diff.js","components/common/DiffViewer.js","components/common/Settings.js","components/pages/Home.js","hooks/get-package-name-from-url.js","hooks/get-language-from-url.js","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Option","AntdSelect","SelectBoxContainer","SelectBox","Select","title","options","props","size","map","version","createApp","key","value","testIDs","Container","Button","AntdButton","UpgradeButton","React","forwardRef","ref","onShowDiff","type","data-testid","onClick","PACKAGE_NAMES","RN","RNM","RNW","BACKSTAGE","LANGUAGE_NAMES","CPP","CS","RN_DIFF_REPOSITORIES","RN_CHANGELOG_URLS","DIFF_BASE_BRANCH","process","REACT_APP_DIFF_BASE_BRANCH","deviceSizes","getRNDiffRepository","packageName","getReleasesFileURL","useYarnPlugin","getDiffURL","language","fromVersion","toVersion","getBinaryFileURL","path","branch","removeAppPathPrefix","appName","replace","RegExp","replaceWithProvidedAppName","toLowerCase","getVersionsContentInDiff","versions","cleanedToVersion","semver","valid","coerce","filter","cleanedVersion","prerelease","compare","includes","getChangelogURL","getTransitionDuration","duration","navigator","webdriver","SHOW_LATEST_RCS","INITIAL_STATE","SettingsContext","createContext","SettingsProvider","memo","children","useLocalStorage","settings","setSettings","Provider","useSettings","useContext","ReleasesContext","isDone","isLoading","releases","undefined","ReleasesProvider","useState","setIsLoading","setIsDone","setReleases","useEffect","a","fetch","json","response","_releases","Object","entries","sort","b","fetchReleaseVersions","useFetchReleases","selectedVersions","setSelectedVersions","useReleases","Selectors","FromVersionSelector","ToVersionSelector","popover","cloneElement","compareReleaseCandidateVersions","versionToCompare","diff","checkIfVersionIsALatestPrerelease","latestVersion","getReleasedVersionsWithCandidates","releasedVersions","showReleaseCandidates","isToVersionAReleaseCandidate","isLatestAReleaseCandidate","releasedVersion","isNotLatestReleaseCandidate","getReleasedVersions","minVersion","maxVersion","latestMajorReleaseVersion","find","patch","getLatestMajorReleaseVersion","length","lt","gt","getFirstRelease","doesVersionExist","allVersions","_error","VersionSelector","isPackageNameDefinedInURL","showDiff","setAllVersions","fromVersionList","setFromVersionList","toVersionList","setToVersionList","hasVersionsFromURL","setHasVersionsFromURL","localFromVersion","setLocalFromVersion","localToVersion","setLocalToVersion","upgradeButtonEl","useRef","releaseVersions","useMemo","versionsInURL","queryString","parse","window","location","search","from","to","getVersionsInURL","hasFromVersionInURL","hasToVersionInURL","toVersionToBeSet","sanitizedVersionsWithReleases","sanitizedVersions","fromVersionToBeSet","fetchVersions","current","loading","onChange","chosenVersion","visible","placement","content","resolveDiffVersion","targetVersion","r","getDefaultToVersion","getDefaultFromVersion","pageURL","href","newURL","packageNameInURL","languageInURL","history","replaceState","updateURL","DiffCommentReminder","comments","isDiffCollapsed","uncollapseDiff","numberOfComments","keys","isVisible","div","variants","opacity","cursor","invisible","animate","transition","InfoCircleOutlined","className","DownloadFileButton","shape","icon","DownloadOutlined","target","ViewFileButton","Wrapper","FileRenameArrow","RightOutlined","FileName","oldPath","newPath","FileStatus","color","add","modify","delete","rename","BinaryBadge","defaultIconButtonStyle","CompleteDiffButton","RollbackOutlined","CheckOutlined","isDiffCompleted","CopyPathToClipboardButton","onCopy","copyPathPopoverContent","resetCopyPathPopoverContent","text","trigger","overlayStyle","width","textAlign","CopyOutlined","onMouseOver","CollapseClickableArea","CollapseDiffButton","DownOutlined","DiffHeader","diffKey","hasDiff","setIsDiffCollapsed","onCompleteDiff","onCopyPathToClipboard","diffComments","sanitizedFilePaths","oldPathSanitized","newPathSanitized","getFilePathsToShow","altKey","Link","rel","e","stopPropagation","InlineCode","forceBlock","overrides","em","code","p","lineColors","neutral","isCommentVisible","height","hidden","initial","inherit","lineChangeType","ContentContainer","ShowButton","scaleX","whileHover","scale","Content","Markdown","LINE_CHANGE_TYPES","ADD","DELETE","NEUTRAL","getComments","some","fileName","reduce","allComments","versionComments","lineNumber","toUpperCase","getLineNumberWithType","DiffComment","setIsCommentVisible","copyPathPopoverContentOpts","More","Decoration","DiffDecoration","DiffView","RDiff","hunks","selectedChanges","onToggleChangeSelection","areAllCollapsed","setAllCollapsed","diffViewStyle","isDiffCollapsedByDefault","setCopyPathPopoverContent","getHunksWithAppName","useCallback","originalHunks","hunk","changes","change","collapse","viewType","diffType","widgets","optimizeSelection","updatedHunks","enhancers","markEdits","tokens","tokenize","gutterEvents","prevProps","nextProps","Title","DiffSection","getDiffKey","completedDiffs","isDoneSection","handleCompleteDiff","doneTitleRef","isUpgradingFrom61To62","isUpgradingFrom61","satisfies","isUpgradingTo62","getIsUpgradingFrom61To62","diffFile","match","oldRevision","newRevision","TitleLoader","speed","backgroundColor","foregroundColor","viewBox","rx","DiffLoader","x","y","motion","Header","DiffLoading","translateY","css","UpgradeSupportAlert","InnerContainer","isContentVisible","h2","visibleContent","translateX","hiddenContent","Icon","role","aria-label","HideContentButton","toggleContentVisibility","UpOutlined","Separator","List","UsefulContentSection","state","handleToggleContentVisibility","setState","getChangelog","context","url","versionWithoutEndingZero","slice","nextState","hasLoaded","this","hasContentBeenHidden","hasMoreThanOneRelease","usefulContent","changelog","links","description","Component","contextType","BinaryRow","index","Popover","overlayClassName","BinaryList","binaryFiles","BinaryDownload","DiffViewStyleOptions","handleViewStyleChange","Group","shake","keyframes","CompletedFilesCounter","completed","total","popoverContent","popoverCursorType","position","active","config","elementCount","angle","startVelocity","RawDiffLinkButton","diffURL","delay","ms","Promise","res","setTimeout","TopContainer","withChangeSelect","multiple","shouldShowDiff","setDiff","all","parseDiff","fetchDiff","useFetchDiff","setCompletedDiffs","isGoToDoneClicked","setIsGoToDoneClicked","donePopoverPossibleOpts","cursorType","donePopoverOpts","setDonePopoverOpts","localStorage","getItem","setViewStyle","diffSectionProps","prevCompletedDiffs","completedDiff","newViewStyle","setItem","style","marginTop","message","showIcon","closable","renderUpgradeDoneMessage","scrollTo","top","behavior","scrollIntoView","SettingsButton","SettingsIcon","Settings","popoverVisibility","setVisibility","defaultChecked","onVisibleChange","visibility","Page","Card","HeaderContainer","LogoImg","TitleHeader","TitleContainer","SettingsContainer","UpdateDocsLink","StarButton","Home","packageNameFromURL","URLSearchParams","get","packageNames","values","useGetPackageNameFromURL","defaultPackageName","defaultLanguage","languageFromURL","languageNames","useGetLanguageFromURL","setFromVersion","setToVersion","setShouldShowDiff","alt","src","logo","homepage","data-icon","data-show-count","App","Boolean","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9e7b910.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d7a4563b.svg\";","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Select as AntdSelect } from 'antd'\n\nconst { Option } = AntdSelect\n\nconst SelectBoxContainer = styled.div`\n  width: 100%;\n`\nconst SelectBox = styled(AntdSelect)`\n  width: 100%;\n`\n\nconst Select = ({ title, options, ...props }) => (\n  <SelectBoxContainer>\n    <h4>{title}</h4>\n\n    <SelectBox size=\"large\" {...props}>\n      {options.map(({ version, createApp }) => (\n        <Option key={version} value={version}>\n          {createApp ? `${version} (create-app@${createApp})` : version}\n        </Option>\n      ))}\n    </SelectBox>\n  </SelectBoxContainer>\n)\n\nexport default Select\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Button as AntdButton } from 'antd'\n\nexport const testIDs = {\n  upgradeButton: 'upgradeButton'\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  height: auto;\n  overflow: hidden;\n  margin-top: 25px;\n`\n\nconst Button = styled(AntdButton)`\n  border-radius: 3px;\n`\n\nconst UpgradeButton = React.forwardRef(({ onShowDiff, ...props }, ref) => (\n  <Container>\n    <Button\n      {...props}\n      ref={ref}\n      type=\"primary\"\n      size=\"large\"\n      data-testid={testIDs.upgradeButton}\n      onClick={onShowDiff}\n    >\n      Show me how to upgrade!\n    </Button>\n  </Container>\n))\n\nexport default UpgradeButton\n","export const DEFAULT_APP_NAME = 'backstagediffapp'\n\nexport const PACKAGE_NAMES = {\n  RN: 'react-native',\n  RNM: 'react-native-macos',\n  RNW: 'react-native-windows',\n  BACKSTAGE: '@backstage/create-app'\n}\n\nexport const LANGUAGE_NAMES = {\n  CPP: 'cpp',\n  CS: 'cs'\n}\n\nexport const RN_DIFF_REPOSITORIES = {\n  [PACKAGE_NAMES.RN]: 'react-native-community/rn-diff-purge',\n  [PACKAGE_NAMES.RNM]: 'acoates-ms/rnw-diff',\n  [PACKAGE_NAMES.RNW]: 'acoates-ms/rnw-diff',\n  [PACKAGE_NAMES.BACKSTAGE]: 'backstage/upgrade-helper-diff'\n}\n\nexport const RN_CHANGELOG_URLS = {\n  [PACKAGE_NAMES.RN]:\n    'https://github.com/react-native-community/releases/blob/master/CHANGELOG.md',\n  [PACKAGE_NAMES.RNM]:\n    'https://github.com/microsoft/react-native-macos/releases/tag/',\n  [PACKAGE_NAMES.RNW]:\n    'https://github.com/microsoft/react-native-windows/releases/tag/react-native-windows_',\n  [PACKAGE_NAMES.BACKSTAGE]:\n    'https://github.com/backstage/backstage/releases/tag/'\n}\n\nexport const DIFF_BASE_BRANCH =\n  process.env.REACT_APP_DIFF_BASE_BRANCH || 'master'\n","export const deviceSizes = {\n  tablet: '(min-width: 768px)'\n}\n","import semver from 'semver/preload'\nimport {\n  RN_DIFF_REPOSITORIES,\n  DEFAULT_APP_NAME,\n  PACKAGE_NAMES,\n  RN_CHANGELOG_URLS,\n  DIFF_BASE_BRANCH\n} from './constants'\n\nconst getRNDiffRepository = ({ packageName }) =>\n  RN_DIFF_REPOSITORIES[packageName]\nconst getDiffBranch = ({ packageName }) =>\n  packageName === PACKAGE_NAMES.BACKSTAGE ? 'master' : 'diffs'\n\nexport const getReleasesFileURL = ({ packageName, useYarnPlugin }) =>\n  `https://raw.githubusercontent.com/${getRNDiffRepository({\n    packageName\n  })}/${DIFF_BASE_BRANCH}/${\n    packageName === PACKAGE_NAMES.BACKSTAGE\n      ? useYarnPlugin\n        ? 'releases-yarn-plugin.json'\n        : 'releases.json'\n      : packageName === PACKAGE_NAMES.RNM\n      ? 'RELEASES_MAC'\n      : packageName === PACKAGE_NAMES.RNM\n      ? 'RELEASES_MAC'\n      : 'RELEASES'\n  }`\n\nexport const getDiffURL = ({\n  packageName,\n  language,\n  fromVersion,\n  toVersion,\n  useYarnPlugin\n}) => {\n  // eslint-disable-next-line no-unused-vars\n  const languageDir =\n    packageName === PACKAGE_NAMES.RNM\n      ? 'mac/'\n      : packageName === PACKAGE_NAMES.RNW\n      ? `${language}/`\n      : ''\n\n  return `https://raw.githubusercontent.com/${getRNDiffRepository({\n    packageName\n  })}/${getDiffBranch({ packageName })}/${\n    useYarnPlugin ? 'diffs-yarn-plugin' : 'diffs'\n  }/${fromVersion}..${toVersion}.diff`\n}\n\n// `path` must contain `RnDiffApp` prefix\nexport const getBinaryFileURL = ({ packageName, language, version, path }) => {\n  const branch =\n    packageName === PACKAGE_NAMES.RNM\n      ? `mac/${version}`\n      : packageName === PACKAGE_NAMES.RNW\n      ? `${language}/${version}`\n      : version\n\n  return `https://github.com/${getRNDiffRepository({\n    packageName\n  })}/raw/release/${branch}/${path}`\n}\n\nexport const removeAppPathPrefix = (path, appName) =>\n  path.replace(new RegExp(`${appName || DEFAULT_APP_NAME}/`), '')\n\nexport const replaceWithProvidedAppName = (path, appName) => {\n  if (!appName) {\n    return path\n  }\n\n  return path\n    .replace(new RegExp(DEFAULT_APP_NAME, 'g'), appName)\n    .replace(\n      new RegExp(DEFAULT_APP_NAME.toLowerCase(), 'g'),\n      appName.toLowerCase()\n    )\n}\n\nexport const getVersionsContentInDiff = ({\n  fromVersion,\n  toVersion,\n  versions\n}) => {\n  const cleanedToVersion = semver.valid(semver.coerce(toVersion))\n\n  return versions.filter(({ version }) => {\n    const cleanedVersion = semver.coerce(version)\n    const isPreRelease = semver.prerelease(version)\n\n    // `cleanedVersion` can't be newer than `cleanedToVersion` nor older (or equal) than `fromVersion`\n    return (\n      !isPreRelease &&\n      semver.compare(cleanedToVersion, cleanedVersion) !== -1 &&\n      ![0, -1].includes(semver.compare(cleanedVersion, fromVersion))\n    )\n  })\n}\n\nexport const getChangelogURL = ({ version, packageName }) => {\n  if (packageName === PACKAGE_NAMES.RNW || packageName === PACKAGE_NAMES.RNM) {\n    return `${RN_CHANGELOG_URLS[packageName]}v${version}`\n  }\n  if (packageName === PACKAGE_NAMES.BACKSTAGE) {\n    return `${RN_CHANGELOG_URLS[packageName]}v${version}`\n  }\n\n  return `${RN_CHANGELOG_URLS[packageName]}#v${version.replace('.', '')}0`\n}\n\n// If the browser is headless (running puppeteer) then it doesn't have any duration\nexport const getTransitionDuration = duration =>\n  navigator.webdriver ? 0 : duration\n\n// settings constants\nexport const SHOW_LATEST_RCS = 'Show all next releases'\nexport const USE_YARN_PLUGIN = 'Use yarn plugin'\n\nexport const getFilePathsToShow = ({ oldPath, newPath, appName }) => {\n  const oldPathSanitized = replaceWithProvidedAppName(oldPath, appName)\n  const newPathSanitized = replaceWithProvidedAppName(newPath, appName)\n\n  return {\n    oldPath: removeAppPathPrefix(oldPathSanitized, appName),\n    newPath: removeAppPathPrefix(newPathSanitized, appName)\n  }\n}\n","import React, { useContext } from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\n\nimport { SHOW_LATEST_RCS, USE_YARN_PLUGIN } from './utils'\n\nconst INITIAL_STATE = {\n  [`${SHOW_LATEST_RCS}`]: false,\n  [`${USE_YARN_PLUGIN}`]: false\n}\n\nexport const SettingsContext = React.createContext(INITIAL_STATE)\n\nexport const SettingsProvider = React.memo(function({ children }) {\n  const [settings, setSettings] = useLocalStorage(\n    'backstage:upgrade-helper:settings',\n    INITIAL_STATE\n  )\n\n  return (\n    <SettingsContext.Provider value={{ settings, setSettings }}>\n      {children}\n    </SettingsContext.Provider>\n  )\n})\n\nexport const useSettings = () => useContext(SettingsContext)\n","import React, { useContext, useState } from 'react'\nimport { useFetchReleases } from './hooks/fetch-release-versions'\nimport { USE_YARN_PLUGIN } from './utils'\nimport { useSettings } from './SettingsProvider'\n\nexport const ReleasesContext = React.createContext({\n  isDone: false,\n  isLoading: false,\n  releases: undefined\n})\n\nexport const ReleasesProvider = React.memo(function({ children, packageName }) {\n  const {\n    settings: { [USE_YARN_PLUGIN]: useYarnPlugin }\n  } = useSettings()\n\n  const value = useFetchReleases({ packageName, useYarnPlugin })\n  const [selectedVersions, setSelectedVersions] = useState()\n\n  return (\n    <ReleasesContext.Provider\n      value={{ ...value, setSelectedVersions, ...selectedVersions }}\n    >\n      {children}\n    </ReleasesContext.Provider>\n  )\n})\n\nexport const useReleases = () => useContext(ReleasesContext)\n","import { useEffect, useState } from 'react'\nimport { getReleasesFileURL } from '../utils'\nimport compare from 'semver/functions/rcompare'\n\nexport const useFetchReleases = ({ packageName, useYarnPlugin }) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [isDone, setIsDone] = useState(false)\n  const [releases, setReleases] = useState(undefined)\n\n  useEffect(() => {\n    const fetchReleaseVersions = async () => {\n      setIsLoading(true)\n      setIsDone(false)\n      const response = await (\n        await fetch(getReleasesFileURL({ packageName, useYarnPlugin }))\n      ).json()\n\n      const _releases = Object.entries(response)\n        .map(([version, value]) => ({ version, ...value }))\n        .sort((a, b) => compare(a.version, b.version))\n      setReleases(_releases)\n\n      setIsLoading(false)\n      setIsDone(true)\n\n      return\n    }\n\n    fetchReleaseVersions()\n  }, [packageName, useYarnPlugin])\n\n  return {\n    isLoading,\n    isDone,\n    releases\n  }\n}\n","import React, { Fragment, useState, useMemo, useEffect, useRef } from 'react'\nimport styled from '@emotion/styled'\nimport { Popover } from 'antd'\nimport semver from 'semver/preload'\nimport queryString from 'query-string'\nimport { Select } from './'\nimport UpgradeButton from './UpgradeButton'\n// import { useFetchReleaseVersions } from '../../hooks/fetch-release-versions'\nimport { updateURL } from '../../utils/update-url'\nimport { deviceSizes } from '../../utils/device-sizes'\nimport { useReleases } from '../../ReleaseProvider'\nimport { useSettings } from '../../SettingsProvider'\nimport { SHOW_LATEST_RCS, USE_YARN_PLUGIN } from '../../utils'\n\nexport const testIDs = {\n  fromVersionSelector: 'fromVersionSelector',\n  toVersionSelector: 'toVersionSelector'\n}\n\nconst Selectors = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 15px;\n\n  @media ${deviceSizes.tablet} {\n    flex-direction: row;\n    gap: 0;\n  }\n`\n\nconst FromVersionSelector = styled(Select)`\n  @media ${deviceSizes.tablet} {\n    padding-right: 5px;\n  }\n`\n\nconst ToVersionSelector = styled(({ popover, ...props }) =>\n  popover ? (\n    React.cloneElement(popover, {\n      children: <Select {...props} />\n    })\n  ) : (\n    <Select {...props} />\n  )\n)`\n  @media ${deviceSizes.tablet} {\n    padding-left: 5px;\n  }\n`\n\nconst getVersionsInURL = () => {\n  // Parses `/?from=VERSION&to=VERSION` from URL\n  const { from: fromVersion, to: toVersion } = queryString.parse(\n    window.location.search\n  )\n\n  return {\n    fromVersion,\n    toVersion\n  }\n}\n\nconst compareReleaseCandidateVersions = ({ version, versionToCompare }) =>\n  ['prerelease', 'prepatch', null].includes(\n    semver.diff(version, versionToCompare)\n  )\n\nconst getLatestMajorReleaseVersion = releasedVersions =>\n  semver.valid(\n    semver.coerce(\n      releasedVersions.find(\n        ({ createApp: releasedVersion }) =>\n          !semver.prerelease(releasedVersion) &&\n          semver.patch(releasedVersion) === 0\n      )\n    )\n  )\n\n// Check if `from` rc version is one of the latest major release (ie. 0.60.0)\nconst checkIfVersionIsALatestPrerelease = ({ version, latestVersion }) =>\n  semver.prerelease(version) &&\n  compareReleaseCandidateVersions({\n    version: latestVersion,\n    versionToCompare: version\n  })\n\n// Filters out release candidates from `releasedVersion` with the\n// exception of the release candidates from the latest version\nconst getReleasedVersionsWithCandidates = ({\n  releasedVersions,\n  toVersion,\n  latestVersion,\n  showReleaseCandidates\n}) => {\n  const isToVersionAReleaseCandidate = semver.prerelease(toVersion) !== null\n  const isLatestAReleaseCandidate = semver.prerelease(latestVersion) !== null\n\n  return releasedVersions.filter(({ version: releasedVersion }) => {\n    // Show the release candidates of the latest version\n    const isNotLatestReleaseCandidate =\n      showReleaseCandidates &&\n      !checkIfVersionIsALatestPrerelease({\n        version: releasedVersion,\n        latestVersion\n      })\n\n    const isLatestReleaseCandidate = checkIfVersionIsALatestPrerelease({\n      version: releasedVersion,\n      latestVersion\n    })\n\n    return (\n      isLatestReleaseCandidate ||\n      isNotLatestReleaseCandidate ||\n      semver.prerelease(releasedVersion) === null ||\n      (isToVersionAReleaseCandidate &&\n        compareReleaseCandidateVersions({\n          version: toVersion,\n          versionToCompare: releasedVersion\n        })) ||\n      (isLatestAReleaseCandidate &&\n        compareReleaseCandidateVersions({\n          version: latestVersion,\n          versionToCompare: releasedVersion\n        }))\n    )\n  })\n}\n\nconst getReleasedVersions = ({ releasedVersions, minVersion, maxVersion }) => {\n  const latestMajorReleaseVersion = getLatestMajorReleaseVersion(\n    releasedVersions\n  )\n\n  const isVersionAReleaseAndOfLatest = version =>\n    version.includes('next') &&\n    semver.valid(semver.coerce(version)) === latestMajorReleaseVersion\n\n  return releasedVersions.filter(\n    ({ version: releasedVersion }) =>\n      releasedVersion.length > 0 &&\n      ((maxVersion && semver.lt(releasedVersion, maxVersion)) ||\n        (minVersion &&\n          semver.gt(releasedVersion, minVersion) &&\n          !isVersionAReleaseAndOfLatest(releasedVersion)))\n  )\n}\n\n// Finds the first specified release (patch, minor, major) when compared to another version\nconst getFirstRelease = (\n  { releasedVersions, versionToCompare },\n  type = 'minor'\n) =>\n  releasedVersions.find(\n    releasedVersion =>\n      semver.lt(releasedVersion, versionToCompare) &&\n      semver.diff(\n        semver.valid(semver.coerce(releasedVersion)),\n        semver.valid(semver.coerce(versionToCompare))\n      ) === type\n  )\n\n// Return if version exists in the ones returned from GitHub\nconst doesVersionExist = ({ version, allVersions, minVersion }) => {\n  try {\n    return (\n      version &&\n      allVersions.includes(version) &&\n      // Also compare the version against a `minVersion`, this is used\n      // to not allow the user to have a `fromVersion` newer than `toVersion`\n      (!minVersion || (minVersion && semver.gt(version, minVersion)))\n    )\n  } catch (_error) {\n    return false\n  }\n}\n\nconst getDefaultToVersion = releases => releases[0]\n\nconst getDefaultFromVersion = (toVersion, releases, showReleaseCandidates) => {\n  // Remove `rc` versions from the array of versions\n  const sanitizedVersionsWithReleases = getReleasedVersionsWithCandidates({\n    releasedVersions: releases,\n    toVersion,\n    latestVersion: releases[0].version,\n    showReleaseCandidates\n  })\n\n  const sanitizedVersions = sanitizedVersionsWithReleases.map(\n    ({ version }) => version\n  )\n\n  const version =\n    getFirstRelease(\n      {\n        releasedVersions: sanitizedVersions,\n        versionToCompare: toVersion.version\n      },\n      'minor'\n    ) ||\n    getFirstRelease(\n      {\n        releasedVersions: sanitizedVersions,\n        versionToCompare: toVersion.version\n      },\n      'patch'\n    )\n\n  return sanitizedVersionsWithReleases.find(value => value.version === version)\n}\n\nconst VersionSelector = ({\n  packageName,\n  language,\n  isPackageNameDefinedInURL,\n  showDiff\n}) => {\n  const {\n    settings: {\n      [SHOW_LATEST_RCS]: showReleaseCandidates,\n      [USE_YARN_PLUGIN]: useYarnPlugin\n    }\n  } = useSettings()\n  const [allVersions, setAllVersions] = useState([])\n  const [fromVersionList, setFromVersionList] = useState([])\n  const [toVersionList, setToVersionList] = useState([])\n  const [hasVersionsFromURL, setHasVersionsFromURL] = useState(false)\n\n  const [localFromVersion, setLocalFromVersion] = useState('')\n  const [localToVersion, setLocalToVersion] = useState('')\n\n  const upgradeButtonEl = useRef(null)\n  const { isDone, isLoading, releases, setSelectedVersions } = useReleases()\n  const releaseVersions = useMemo(\n    () => releases?.map(({ version }) => version),\n    [releases]\n  )\n\n  useEffect(() => {\n    const versionsInURL = getVersionsInURL()\n\n    const fetchVersions = async () => {\n      // Check if the versions provided in the URL are valid\n      const hasFromVersionInURL = doesVersionExist({\n        version: versionsInURL.fromVersion,\n        allVersions: releaseVersions\n      })\n\n      const hasToVersionInURL = doesVersionExist({\n        version: versionsInURL.toVersion,\n        allVersions: releaseVersions,\n        minVersion: versionsInURL.fromVersion\n      })\n\n      const latestVersion = releaseVersions[0]\n      // If the version from URL is not valid then fallback to the latest\n      const toVersionToBeSet = hasToVersionInURL\n        ? versionsInURL.toVersion\n        : latestVersion\n\n      // Remove `rc` versions from the array of versions\n      const sanitizedVersionsWithReleases = getReleasedVersionsWithCandidates({\n        releasedVersions: releases,\n        toVersion: toVersionToBeSet,\n        latestVersion,\n        showReleaseCandidates\n      })\n\n      const sanitizedVersions = sanitizedVersionsWithReleases.map(\n        ({ version }) => version\n      )\n\n      setAllVersions(sanitizedVersionsWithReleases)\n\n      const fromVersionToBeSet = hasFromVersionInURL\n        ? versionsInURL.fromVersion\n        : // Get first major release before latest\n          getFirstRelease(\n            {\n              releasedVersions: sanitizedVersions,\n              versionToCompare: toVersionToBeSet\n            },\n            'minor'\n          ) ||\n          getFirstRelease(\n            {\n              releasedVersions: sanitizedVersions,\n              versionToCompare: toVersionToBeSet\n            },\n            'patch'\n          )\n\n      setFromVersionList(\n        getReleasedVersions({\n          releasedVersions: sanitizedVersionsWithReleases,\n          maxVersion: toVersionToBeSet\n        })\n      )\n      setToVersionList(\n        getReleasedVersions({\n          releasedVersions: sanitizedVersionsWithReleases,\n          minVersion: fromVersionToBeSet\n        })\n      )\n\n      setLocalFromVersion(fromVersionToBeSet)\n      setLocalToVersion(toVersionToBeSet)\n\n      const doesHaveVersionsInURL = hasFromVersionInURL && hasToVersionInURL\n\n      setHasVersionsFromURL(doesHaveVersionsInURL)\n    }\n\n    if (isDone) {\n      fetchVersions()\n    }\n  }, [\n    isDone,\n    releaseVersions,\n    setLocalFromVersion,\n    setLocalToVersion,\n    showReleaseCandidates\n  ])\n\n  useEffect(() => {\n    if (isLoading) {\n      return\n    }\n\n    setFromVersionList(\n      getReleasedVersions({\n        releasedVersions: allVersions,\n        maxVersion: localToVersion\n      })\n    )\n    setToVersionList(\n      getReleasedVersions({\n        releasedVersions: allVersions,\n        minVersion: localFromVersion\n      })\n    )\n\n    upgradeButtonEl.current.props.onClick()\n  }, [\n    isLoading,\n    allVersions,\n    localFromVersion,\n    localToVersion,\n    hasVersionsFromURL,\n    releases,\n    showReleaseCandidates\n  ])\n\n  const onShowDiff = () => {\n    const resolveDiffVersion = targetVersion =>\n      releases.find(r => r.version === targetVersion)\n\n    const to =\n      resolveDiffVersion(localToVersion) || getDefaultToVersion(releases)\n    const from =\n      resolveDiffVersion(localFromVersion) ||\n      getDefaultFromVersion(to, releases, showReleaseCandidates)\n\n    setSelectedVersions({\n      from,\n      to\n    })\n\n    showDiff({\n      fromVersion: from[useYarnPlugin ? 'version' : 'createApp'],\n      toVersion: to[useYarnPlugin ? 'version' : 'createApp']\n    })\n\n    updateURL({\n      packageName,\n      language,\n      isPackageNameDefinedInURL,\n      fromVersion: localFromVersion,\n      toVersion: localToVersion\n    })\n  }\n\n  return (\n    <Fragment>\n      <Selectors>\n        <FromVersionSelector\n          key={'from-' + useYarnPlugin}\n          data-testid={testIDs.fromVersionSelector}\n          title={`What's your current Backstage release or @backstage/create-app (0.4.x) version?`}\n          loading={isLoading}\n          value={localFromVersion}\n          options={fromVersionList}\n          onChange={chosenVersion => setLocalFromVersion(chosenVersion)}\n        />\n\n        <ToVersionSelector\n          key={'to-' + useYarnPlugin}\n          data-testid={testIDs.toVersionSelector}\n          title=\"To which version would you like to upgrade?\"\n          loading={isLoading}\n          value={localToVersion}\n          options={toVersionList}\n          popover={\n            localToVersion === '0.60.1' && (\n              <Popover\n                visible={true}\n                placement=\"topLeft\"\n                content=\"We recommend using the latest 0.60 patch release instead of 0.60.1.\"\n              />\n            )\n          }\n          onChange={chosenVersion => setLocalToVersion(chosenVersion)}\n        />\n      </Selectors>\n\n      <UpgradeButton ref={upgradeButtonEl} onShowDiff={onShowDiff} />\n    </Fragment>\n  )\n}\n\nexport default VersionSelector\n","import { PACKAGE_NAMES } from '../constants'\n\nexport function updateURL({\n  packageName,\n  language,\n  isPackageNameDefinedInURL,\n  fromVersion,\n  toVersion\n}) {\n  const pageURL = window.location.href.replace(window.location.search, '')\n\n  const newURL =\n    fromVersion !== '' || toVersion !== ''\n      ? `?from=${fromVersion}&to=${toVersion}`\n      : '?'\n  const packageNameInURL = isPackageNameDefinedInURL\n    ? `&package=${packageName}`\n    : ''\n  const languageInURL =\n    packageName === PACKAGE_NAMES.RNW ? `&language=${language}` : ''\n\n  window.history.replaceState(\n    null,\n    null,\n    `${pageURL}${newURL}${packageNameInURL}${languageInURL}`\n  )\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { motion } from 'framer-motion'\nimport { InfoCircleOutlined } from '@ant-design/icons'\nimport { getTransitionDuration } from '../../../utils'\n\nconst DiffCommentReminder = styled(\n  ({ comments, isDiffCollapsed, uncollapseDiff, ...props }) => {\n    const numberOfComments = Object.keys(comments).length\n    const isVisible = isDiffCollapsed && numberOfComments > 0\n\n    return (\n      <motion.div\n        {...props}\n        variants={{\n          visible: { opacity: 1, cursor: 'pointer' },\n          invisible: { opacity: 0, cursor: 'initial' }\n        }}\n        animate={isVisible > 0 ? 'visible' : 'invisible'}\n        transition={{\n          duration: getTransitionDuration(0.5)\n        }}\n        onClick={uncollapseDiff}\n      >\n        <InfoCircleOutlined className=\"icon\" />\n\n        <span className=\"reminder\">\n          {numberOfComments} hidden comment{numberOfComments > 1 && 's'}\n        </span>\n      </motion.div>\n    )\n  }\n)`\n  display: inline;\n  background-color: #fffbe6;\n  padding: 5px;\n  border-radius: 3px;\n  margin-left: 10px;\n  border: 1px solid #ffe58f;\n\n  & > .icon {\n    margin-right: 6px;\n  }\n\n  & > .reminder {\n    word-spacing: -2px;\n  }\n`\n\nexport default DiffCommentReminder\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Button } from 'antd'\nimport { DownloadOutlined } from '@ant-design/icons'\nimport { getBinaryFileURL } from '../../utils'\n\nconst DownloadFileButton = styled(\n  ({ visible, version, path, packageName, ...props }) => {\n    return visible ? (\n      <Button\n        {...props}\n        type=\"ghost\"\n        shape=\"circle\"\n        icon={<DownloadOutlined />}\n        target=\"_blank\"\n        href={getBinaryFileURL({ packageName, version, path })}\n      />\n    ) : null\n  }\n)`\n  color: #24292e;\n  font-size: 12px;\n  border-width: 0;\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\n\nexport default DownloadFileButton\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Button } from 'antd'\nimport { getBinaryFileURL } from '../../utils'\n\nconst ViewFileButton = styled(\n  ({ visible, version, path, packageName, ...props }) => {\n    if (!visible) {\n      return null\n    }\n\n    return (\n      <Button\n        {...props}\n        type=\"link\"\n        target=\"_blank\"\n        href={getBinaryFileURL({ packageName, version, path })}\n      >\n        View file\n      </Button>\n    )\n  }\n)`\n  font-size: 12px;\n  color: #24292e;\n`\n\nexport default ViewFileButton\n","import React, { Fragment } from 'react'\nimport styled from '@emotion/styled'\nimport { Tag, Button, Popover } from 'antd'\nimport {\n  CheckOutlined,\n  DownOutlined,\n  RightOutlined,\n  CopyOutlined,\n  RollbackOutlined\n} from '@ant-design/icons'\nimport { getFilePathsToShow } from '../../../utils'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport DiffCommentReminder from './DiffCommentReminder'\nimport DownloadFileButton from '../DownloadFileButton'\nimport ViewFileButton from '../ViewFileButton'\n\nexport const testIDs = {\n  collapseClickableArea: 'collapseClickableArea'\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier,\n    monospace;\n  font-size: 12px;\n  color: #24292e;\n  line-height: 32px;\n  background-color: #fafbfc;\n  border-bottom: 1px solid #e1e4e8;\n  border-top-left-radius: 2px;\n  border-top-right-radius: 2px;\n  padding: 5px 10px;\n  position: sticky;\n  top: 0;\n`\n\nconst FileRenameArrow = styled(RightOutlined)({\n  fontSize: '10px',\n  margin: '0 5px',\n  color: '#f78206'\n})\n\nconst FileName = ({ oldPath, newPath, type, appName }) => {\n  if (type === 'delete') {\n    return <span>{oldPath}</span>\n  }\n\n  if (oldPath !== newPath && type !== 'add') {\n    return (\n      <span>\n        {oldPath} <FileRenameArrow /> {newPath}\n      </span>\n    )\n  }\n\n  return <span>{newPath}</span>\n}\n\nconst FileStatus = ({ type, ...props }) => {\n  const colors = {\n    add: 'blue',\n    modify: 'green',\n    delete: 'red',\n    rename: 'orange'\n  }\n\n  const labels = {\n    add: 'ADDED',\n    modify: 'MODIFIED',\n    delete: 'DELETED',\n    rename: 'RENAMED'\n  }\n\n  return (\n    <Tag {...props} color={colors[type]}>\n      {labels[type]}\n    </Tag>\n  )\n}\n\nconst BinaryBadge = ({ visible, ...props }) =>\n  visible ? (\n    <Tag {...props} color=\"cyan\">\n      BINARY\n    </Tag>\n  ) : null\n\nconst defaultIconButtonStyle = `\n  font-size: 13px;\n  line-height: 0;\n  border-width: 0px;\n  width: 22px;\n  height: 22px;\n  margin: 5px 0;\n  border-radius: 50%;\n`\n\nconst CompleteDiffButton = styled(({ visible, onClick, ...props }) =>\n  visible ? (\n    <Button\n      {...props}\n      type=\"ghost\"\n      icon={<RollbackOutlined />}\n      onClick={onClick}\n    />\n  ) : (\n    <Button\n      {...props}\n      type=\"ghost\"\n      icon={<CheckOutlined />}\n      onClick={onClick}\n    />\n  )\n)`\n  ${defaultIconButtonStyle}\n  &,\n  &:hover,\n  &:focus {\n    color: ${({ isDiffCompleted }) =>\n      isDiffCompleted ? '#52c41a' : '#24292e'};\n  }\n`\n\nconst CopyPathToClipboardButton = styled(\n  ({\n    oldPath,\n    newPath,\n    type,\n    onCopy,\n    copyPathPopoverContent,\n    resetCopyPathPopoverContent,\n    ...props\n  }) => (\n    <CopyToClipboard text={type === 'add' ? newPath : oldPath} onCopy={onCopy}>\n      <Popover\n        content={copyPathPopoverContent}\n        trigger=\"hover\"\n        overlayStyle={{\n          width: '175px',\n          textAlign: 'center'\n        }}\n      >\n        <Button\n          {...props}\n          type=\"ghost\"\n          icon={<CopyOutlined />}\n          onMouseOver={resetCopyPathPopoverContent}\n        />\n      </Popover>\n    </CopyToClipboard>\n  )\n)`\n  ${defaultIconButtonStyle}\n`\n\nconst CollapseClickableArea = styled.div`\n  display: inline-block;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst CollapseDiffButton = styled(({ visible, isDiffCollapsed, ...props }) =>\n  visible ? <Button {...props} type=\"link\" icon={<DownOutlined />} /> : null\n)`\n  color: #24292e;\n  margin-right: 2px;\n  font-size: 10px;\n  transform: ${({ isDiffCollapsed }) =>\n    isDiffCollapsed ? 'rotate(-90deg)' : 'initial'};\n  transition: transform 0.2s ease-in-out;\n  transform-origin: center;\n  line-height: 0;\n  height: auto;\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\n\nconst DiffHeader = ({\n  oldPath,\n  newPath,\n  toVersion,\n  type,\n  diffKey,\n  hasDiff,\n  isDiffCollapsed,\n  setIsDiffCollapsed,\n  isDiffCompleted,\n  onCompleteDiff,\n  onCopyPathToClipboard,\n  copyPathPopoverContent,\n  resetCopyPathPopoverContent,\n  appName,\n  diffComments,\n  packageName,\n  ...props\n}) => {\n  const sanitizedFilePaths = getFilePathsToShow({ oldPath, newPath, appName })\n\n  return (\n    <Wrapper {...props}>\n      <div>\n        <CollapseClickableArea\n          data-testid={testIDs.collapseClickableArea}\n          onClick={({ altKey }) => setIsDiffCollapsed(!isDiffCollapsed, altKey)}\n        >\n          <CollapseDiffButton\n            visible={hasDiff}\n            isDiffCollapsed={isDiffCollapsed}\n          />\n          <FileName\n            oldPath={sanitizedFilePaths.oldPath}\n            newPath={sanitizedFilePaths.newPath}\n            type={type}\n            appName={appName}\n          />{' '}\n          <FileStatus type={type} />\n          <BinaryBadge visible={!hasDiff} />\n        </CollapseClickableArea>\n        <CopyPathToClipboardButton\n          oldPath={sanitizedFilePaths.oldPath}\n          newPath={sanitizedFilePaths.newPath}\n          type={type}\n          onCopy={onCopyPathToClipboard}\n          copyPathPopoverContent={copyPathPopoverContent}\n          resetCopyPathPopoverContent={resetCopyPathPopoverContent}\n        />\n\n        <DiffCommentReminder\n          comments={diffComments}\n          isDiffCollapsed={isDiffCollapsed}\n          uncollapseDiff={() => setIsDiffCollapsed(false)}\n        />\n      </div>\n      <div>\n        <Fragment>\n          <ViewFileButton\n            visible={hasDiff && type !== 'delete'}\n            version={toVersion}\n            path={newPath}\n            packageName={packageName}\n          />\n          <DownloadFileButton\n            visible={!hasDiff && type !== 'delete'}\n            version={toVersion}\n            path={newPath}\n            packageName={packageName}\n          />\n          <CompleteDiffButton\n            visible={isDiffCompleted}\n            onClick={() => onCompleteDiff(diffKey)}\n          />\n        </Fragment>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default DiffHeader\n","import React from 'react'\nimport Markdown from 'markdown-to-jsx'\nimport styled from '@emotion/styled'\n\nexport const Link = styled(props => (\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n  <a\n    target=\"_blank\"\n    {...props}\n    rel=\"noopener\"\n    onClick={e => e.stopPropagation()}\n  />\n))`\n  text-decoration: none;\n  color: #045dc1;\n`\n\nconst InlineCode = styled.em`\n  font-style: normal;\n  background-color: rgba(27, 31, 35, 0.07);\n  border-radius: 3px;\n  font-size: 85%;\n  margin: 0;\n  padding: 0.2em 0.4em;\n`\n\nexport default ({ forceBlock = false, options = {}, ...props }) => (\n  <Markdown\n    {...props}\n    options={{\n      ...options,\n      forceBlock,\n      overrides: {\n        ...options.overrides,\n        a: Link,\n        em: InlineCode,\n        code: InlineCode,\n        p: styled.p`\n          margin-bottom: 0;\n        `\n      }\n    }}\n  />\n)\n","import React, { useState, Fragment } from 'react'\nimport styled from '@emotion/styled'\nimport { motion } from 'framer-motion'\nimport { removeAppPathPrefix, getVersionsContentInDiff } from '../../../utils'\nimport Markdown from '../Markdown'\n\nconst lineColors = {\n  add: '#d6fedb',\n  delete: '#fdeff0',\n  neutral: '#ffffff'\n}\n\nconst Container = styled(({ isCommentVisible, children, ...props }) => (\n  <motion.div\n    {...props}\n    variants={{\n      visible: {\n        height: 'auto'\n      },\n      hidden: { height: 10 }\n    }}\n    initial={isCommentVisible ? 'visible' : 'hidden'}\n    animate={isCommentVisible ? 'visible' : 'hidden'}\n    transition={{\n      duration: 0.5\n    }}\n    inherit={false}\n  >\n    <div children={children} />\n  </motion.div>\n))`\n  overflow: hidden;\n\n  & > div {\n    display: flex;\n    flex-direction: row;\n    background-color: ${({ lineChangeType }) => lineColors[lineChangeType]};\n    cursor: pointer;\n  }\n`\n\nconst ContentContainer = styled.div`\n  flex: 1;\n  position: relative;\n  padding: 16px;\n  color: #000;\n  background-color: #fffbe6;\n  user-select: none;\n`\n\nconst ShowButton = styled(({ isCommentVisible, ...props }) => (\n  <motion.div\n    {...props}\n    variants={{\n      visible: {\n        scaleX: 1\n      },\n      hidden: { scaleX: 10 }\n    }}\n    whileHover={{\n      scale: 2\n    }}\n    initial={isCommentVisible ? 'visible' : 'hidden'}\n    animate={isCommentVisible ? 'visible' : 'hidden'}\n    transition={{\n      duration: 0.25\n    }}\n  />\n))`\n  background-color: #ffe58f;\n  margin-left: 20px;\n  width: 10px;\n  cursor: pointer;\n`\n\nconst Content = styled(Markdown)`\n  opacity: 1;\n  ${({ isCommentVisible }) =>\n    !isCommentVisible &&\n    `\n      opacity: 0;\n    `}\n  transition: opacity 0.25s ease-out;\n`\n\nconst LINE_CHANGE_TYPES = {\n  ADD: 'I',\n  DELETE: 'D',\n  NEUTRAL: 'N'\n}\n\nconst getLineNumberWithType = ({ lineChangeType, lineNumber }) =>\n  `${LINE_CHANGE_TYPES[lineChangeType.toUpperCase()]}${lineNumber}`\n\nconst getComments = ({ versions, newPath, fromVersion, toVersion }) => {\n  const newPathSanitized = removeAppPathPrefix(newPath)\n\n  const versionsInDiff = getVersionsContentInDiff({\n    versions,\n    fromVersion,\n    toVersion\n  }).filter(\n    ({ comments }) =>\n      comments &&\n      comments.length > 0 &&\n      comments.some(({ fileName }) => fileName === newPathSanitized)\n  )\n\n  return versionsInDiff.reduce((allComments, version) => {\n    const comments = version.comments.reduce(\n      (versionComments, { fileName, lineChangeType, lineNumber, content }) => {\n        if (fileName !== newPathSanitized) {\n          return versionComments\n        }\n\n        return {\n          ...versionComments,\n          [getLineNumberWithType({ lineChangeType, lineNumber })]: (\n            <DiffComment\n              content={<Fragment>{content}</Fragment>}\n              lineChangeType={lineChangeType}\n            />\n          )\n        }\n      },\n      {}\n    )\n\n    return {\n      ...allComments,\n      ...comments\n    }\n  }, {})\n}\n\nconst DiffComment = ({ content, lineChangeType }) => {\n  const [isCommentVisible, setIsCommentVisible] = useState(true)\n\n  return (\n    <Container\n      isCommentVisible={isCommentVisible}\n      lineChangeType={lineChangeType}\n      onClick={() => setIsCommentVisible(!isCommentVisible)}\n    >\n      <ShowButton\n        isCommentVisible={isCommentVisible}\n        onClick={() => setIsCommentVisible(!isCommentVisible)}\n      />\n\n      <ContentContainer>\n        <Content isCommentVisible={isCommentVisible}>\n          {content.props.children}\n        </Content>\n      </ContentContainer>\n    </Container>\n  )\n}\n\nexport { getComments }\nexport default DiffComment\n","import React, { useState, useCallback, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport {\n  Diff as RDiff,\n  Hunk,\n  markEdits,\n  tokenize,\n  Decoration as DiffDecoration\n} from 'react-diff-view'\nimport DiffHeader from './DiffHeader'\nimport { getComments } from './DiffComment'\nimport { replaceWithProvidedAppName } from '../../../utils'\nimport { useReleases } from '../../../ReleaseProvider'\n\nconst copyPathPopoverContentOpts = {\n  default: 'Click to copy file path',\n  copied: 'File path copied!'\n}\n\nconst Container = styled.div`\n  border: 1px solid #e8e8e8;\n  border-radius: 3px;\n  margin-bottom: 16px;\n  margin-top: 16px;\n`\n\nconst More = styled.div`\n  background-color: #f1f8ff;\n  margin-left: 30px;\n  padding-left: 4px;\n  color: '#1b1f23b3';\n`\n\nconst Decoration = styled(DiffDecoration)`\n  background-color: #dbedff;\n`\n\nconst DiffView = styled(RDiff)`\n  .diff-gutter-col {\n    width: 30px;\n  }\n\n  tr.diff-line {\n    font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier,\n      monospace;\n  }\n\n  td.diff-gutter {\n    color: rgba(27, 31, 35, 0.3);\n    padding: 0;\n    text-align: center;\n    font-size: 12px;\n    cursor: auto;\n  }\n\n  td.diff-gutter .diff-line-normal {\n    background-color: #cdffd8;\n    border-color: #bef5cb;\n  }\n\n  td.diff-gutter:hover {\n    cursor: pointer;\n    color: rgba(27, 31, 35, 0.6);\n  }\n\n  td.diff-code {\n    font-size: 12px;\n    color: #24292e;\n  }\n\n  td.diff-code-insert .diff-code-edit {\n    background-color: #acf2bd;\n  }\n\n  td.diff-gutter-omit:before {\n    width: 0;\n    background-color: transparent;\n  }\n\n  td.diff-widget-content {\n    padding: 0;\n  }\n`\n\n// Diff will be collapsed by default if the file has been deleted or has more than 5 hunks\nconst isDiffCollapsedByDefault = ({ type, hunks }) =>\n  type === 'delete' || hunks.length > 5 ? true : undefined\n\nconst Diff = ({\n  packageName,\n  oldPath,\n  newPath,\n  type,\n  hunks,\n  fromVersion,\n  toVersion,\n  diffKey,\n  isDiffCompleted,\n  onCompleteDiff,\n  selectedChanges,\n  onToggleChangeSelection,\n  areAllCollapsed,\n  setAllCollapsed,\n  diffViewStyle,\n  appName\n}) => {\n  const [isDiffCollapsed, setIsDiffCollapsed] = useState(\n    isDiffCollapsedByDefault({ type, hunks })\n  )\n\n  const [copyPathPopoverContent, setCopyPathPopoverContent] = useState(\n    copyPathPopoverContentOpts.default\n  )\n\n  const handleCopyPathToClipboard = () => {\n    setCopyPathPopoverContent(copyPathPopoverContentOpts.copied)\n  }\n\n  const handleResetCopyPathPopoverContent = () => {\n    if (copyPathPopoverContent === copyPathPopoverContentOpts.copied) {\n      setCopyPathPopoverContent(copyPathPopoverContentOpts.default)\n    }\n  }\n\n  const getHunksWithAppName = useCallback(\n    originalHunks => {\n      if (!appName) {\n        return originalHunks\n      }\n\n      return originalHunks.map(hunk => ({\n        ...hunk,\n        changes: hunk.changes.map(change => ({\n          ...change,\n          content: replaceWithProvidedAppName(change.content, appName)\n        }))\n      }))\n    },\n    [appName]\n  )\n\n  useEffect(() => {\n    if (areAllCollapsed !== undefined && areAllCollapsed !== isDiffCollapsed) {\n      setIsDiffCollapsed(areAllCollapsed)\n    } else if (isDiffCompleted && isDiffCollapsed === undefined) {\n      setIsDiffCollapsed(true)\n    }\n  }, [areAllCollapsed, isDiffCollapsed, isDiffCompleted])\n\n  const { releases } = useReleases()\n  const diffComments = getComments({\n    versions: releases,\n    newPath,\n    fromVersion,\n    toVersion,\n    appName\n  })\n\n  return (\n    <Container>\n      <DiffHeader\n        oldPath={oldPath}\n        newPath={newPath}\n        toVersion={toVersion}\n        type={type}\n        diffKey={diffKey}\n        hasDiff={hunks.length > 0}\n        isDiffCollapsed={isDiffCollapsed}\n        setIsDiffCollapsed={(collapse, altKey) => {\n          if (altKey) {\n            return setAllCollapsed(collapse)\n          }\n\n          setAllCollapsed(undefined)\n          setIsDiffCollapsed(collapse)\n        }}\n        isDiffCompleted={isDiffCompleted}\n        onCopyPathToClipboard={handleCopyPathToClipboard}\n        copyPathPopoverContent={copyPathPopoverContent}\n        resetCopyPathPopoverContent={handleResetCopyPathPopoverContent}\n        onCompleteDiff={onCompleteDiff}\n        appName={appName}\n        diffComments={diffComments}\n        packageName={packageName}\n      />\n\n      {!isDiffCollapsed && (\n        <DiffView\n          viewType={diffViewStyle}\n          diffType={type}\n          hunks={hunks}\n          widgets={diffComments}\n          optimizeSelection={true}\n          selectedChanges={selectedChanges}\n        >\n          {originalHunks => {\n            const updatedHunks = getHunksWithAppName(originalHunks)\n\n            const options = {\n              enhancers: [markEdits(updatedHunks)]\n            }\n\n            const tokens = tokenize(updatedHunks, options)\n\n            return updatedHunks.map(hunk => [\n              <Decoration key={'decoration-' + hunk.content}>\n                <More>{hunk.content}</More>\n              </Decoration>,\n              <Hunk\n                key={hunk.content}\n                hunk={hunk}\n                tokens={tokens}\n                gutterEvents={{ onClick: onToggleChangeSelection }}\n              />\n            ])\n          }}\n        </DiffView>\n      )}\n    </Container>\n  )\n}\n\n/*\n  Return true if passing `nextProps` to render would return\n  the same result as passing prevProps to render, otherwise return false\n*/\nconst arePropsEqual = (prevProps, nextProps) =>\n  prevProps.isDiffCompleted === nextProps.isDiffCompleted &&\n  prevProps.areAllCollapsed === nextProps.areAllCollapsed &&\n  prevProps.diffViewStyle === nextProps.diffViewStyle &&\n  prevProps.appName === nextProps.appName\n\nexport default React.memo(Diff, arePropsEqual)\n","import React, { useState, useCallback } from 'react'\nimport styled from '@emotion/styled'\nimport semver from 'semver'\nimport Diff from './Diff'\n\nexport const testIDs = {\n  diffSection: 'diffSection'\n}\n\nconst Title = styled.h1`\n  margin-top: 0.5em;\n`\n\nconst DiffSection = ({\n  packageName,\n  diff,\n  getDiffKey,\n  title,\n  completedDiffs,\n  isDoneSection,\n  fromVersion,\n  toVersion,\n  handleCompleteDiff,\n  selectedChanges,\n  onToggleChangeSelection,\n  diffViewStyle,\n  appName,\n  doneTitleRef\n}) => {\n  const [areAllCollapsed, setAllCollapsed] = useState(undefined)\n\n  const getIsUpgradingFrom61To62 = useCallback(() => {\n    const isUpgradingFrom61 = semver.satisfies(\n      fromVersion,\n      '>= 0.61.0 <= 0.62.0'\n    )\n\n    const isUpgradingTo62 = semver.satisfies(toVersion, '>= 0.62.0 <= 0.63.0')\n\n    return isUpgradingFrom61 && isUpgradingTo62\n  }, [fromVersion, toVersion])\n\n  const isUpgradingFrom61To62 = getIsUpgradingFrom61To62()\n\n  return (\n    <div data-testid={testIDs.diffSection}>\n      {title && completedDiffs.length > 0 && (\n        <Title ref={doneTitleRef}>{title}</Title>\n      )}\n\n      {diff.map(diffFile => {\n        const diffKey = getDiffKey(diffFile)\n        const isDiffCompleted = completedDiffs.includes(diffKey)\n\n        // If it's the \"done\" section, it shouldn't show if it's not completed\n        if (isDoneSection !== isDiffCompleted) {\n          return null\n        }\n\n        // This is here because there was a change in the line-endings of the\n        // `gradlew.bat` from version 0.61 to 0.62 which showed the entire file\n        // as a big change\n        if (\n          isUpgradingFrom61To62 &&\n          diffFile.oldPath.match(/gradlew.bat/) &&\n          diffFile.newPath.match(/gradlew.bat/)\n        ) {\n          return null\n        }\n\n        return (\n          <Diff\n            key={`${diffFile.oldRevision}${diffFile.newRevision}`}\n            {...diffFile}\n            packageName={packageName}\n            // otakustay/react-diff-view#49\n            type={diffFile.type === 'new' ? 'add' : diffFile.type}\n            diffKey={diffKey}\n            diffViewStyle={diffViewStyle}\n            fromVersion={fromVersion}\n            toVersion={toVersion}\n            isDiffCompleted={completedDiffs.includes(diffKey)}\n            onCompleteDiff={handleCompleteDiff}\n            selectedChanges={selectedChanges}\n            onToggleChangeSelection={onToggleChangeSelection}\n            areAllCollapsed={areAllCollapsed}\n            setAllCollapsed={setAllCollapsed}\n            appName={appName}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default DiffSection\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { motion } from 'framer-motion'\nimport ContentLoader from 'react-content-loader'\nimport { getTransitionDuration } from '../../../utils'\n\nconst TitleLoader = () => (\n  <ContentLoader\n    speed={1}\n    backgroundColor=\"#eee\"\n    foregroundColor=\"#e6e6e6\"\n    viewBox=\"0 0 400 100\"\n  >\n    <rect width=\"250\" height=\"6\" rx=\"1.5\" />\n  </ContentLoader>\n)\n\nconst DiffLoader = () => (\n  <ContentLoader\n    speed={1}\n    backgroundColor=\"#eee\"\n    foregroundColor=\"#e6e6e6\"\n    viewBox=\"0 0 400 100\"\n  >\n    <rect x=\"0\" y=\"10\" width=\"47%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"200\" y=\"10\" width=\"41%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"0\" y=\"18\" width=\"43%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"200\" y=\"34\" width=\"40%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"200\" y=\"42\" width=\"45%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"0\" y=\"42\" width=\"40%\" height=\"6\" rx=\"1.5\" />\n    <rect x=\"0\" y=\"50\" width=\"44%\" height=\"6\" rx=\"1.5\" />\n  </ContentLoader>\n)\n\nconst Container = styled(motion.div)`\n  margin-top: 16px;\n  border: 1px solid #e8e8e8;\n  border-radius: 3px;\n`\n\nconst Header = styled.div({\n  color: '#24292e',\n  backgroundColor: '#fafbfc',\n  padding: '10px',\n  height: '40px'\n})\n\nconst DiffLoading = () => (\n  <Container\n    initial={{ opacity: 0, translateY: 100 }}\n    animate={{ opacity: 1, translateY: 0 }}\n    transition={{ duration: getTransitionDuration(0.5) }}\n  >\n    <Header>\n      <TitleLoader />\n    </Header>\n    <div\n      css={{\n        padding: '5px 10px'\n      }}\n    >\n      <DiffLoader />\n    </div>\n  </Container>\n)\n\nexport default DiffLoading\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Tooltip } from 'antd'\n\nconst UpgradeSupportAlert = styled(props => (\n  <div {...props}>\n    <span>\n      Check out{' '}\n      <Tooltip\n        placement=\"bottom\"\n        title=\"Backstage's Support is a community-backed place to request and give help.\"\n      >\n        <a\n          href=\"https://backstage.io/docs/overview/support\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          {...props}\n        >\n          Support and community\n        </a>\n      </Tooltip>{' '}\n      if you are experiencing issues related to Backstage during the upgrading\n      process.\n    </span>\n  </div>\n))`\n  padding-top: 15px;\n  span > a {\n    color: #045dc1;\n\n    &:hover {\n      color: #40a9ff;\n    }\n  }\n`\n\nexport default UpgradeSupportAlert\n","import React, { Component, Fragment } from 'react'\nimport styled from '@emotion/styled'\nimport { UpOutlined, DownOutlined } from '@ant-design/icons'\nimport { Button } from 'antd'\nimport {\n  getVersionsContentInDiff,\n  getChangelogURL,\n  getTransitionDuration\n} from '../../utils'\nimport { Link } from './Markdown'\nimport UpgradeSupportAlert from './UpgradeSupportAlert'\n// import AppNameWarning from './AppNameWarning'\nimport { motion } from 'framer-motion'\nimport { PACKAGE_NAMES } from '../../constants'\nimport { ReleasesContext } from '../../ReleaseProvider'\n\nconst Container = styled.div`\n  position: relative;\n  margin-top: 16px;\n  color: rgba(0, 0, 0, 0.65);\n  overflow: hidden;\n`\n\nconst InnerContainer = styled.div`\n  color: rgba(0, 0, 0, 0.65);\n  background-color: #fffbe6;\n  border-width: 1px;\n  border-left-width: 7px;\n  border-color: #ffe58f;\n  border-style: solid;\n  border-radius: 3px;\n  transition: padding 0.25s ease-out;\n`\n\nconst Title = styled(({ isContentVisible, ...props }) => (\n  <motion.h2\n    {...props}\n    variants={{\n      visibleContent: {\n        translateX: 0,\n        translateY: 0\n      },\n      hiddenContent: {\n        translateX: -5,\n        translateY: -10\n      }\n    }}\n    initial={isContentVisible ? 'visibleContent' : 'hiddenContent'}\n    animate={isContentVisible ? 'visibleContent' : 'hiddenContent'}\n    transition={{\n      duration: getTransitionDuration(0.25)\n    }}\n    inherit={false}\n  />\n))`\n  font-size: 17px;\n  cursor: pointer;\n  margin: 0px;\n  padding: 18px 0px 0px 14px;\n`\n\nconst ContentContainer = styled(({ isContentVisible, children, ...props }) => (\n  <motion.div\n    {...props}\n    variants={{\n      visible: {\n        opacity: 1,\n        height: 'auto',\n        translateY: 0\n      },\n      hidden: { opacity: 0, height: 0, translateY: -20 }\n    }}\n    initial={isContentVisible ? 'visible' : 'hidden'}\n    animate={isContentVisible ? 'visible' : 'hidden'}\n    transition={{\n      duration: getTransitionDuration(0.25)\n    }}\n    inherit={false}\n  >\n    <div children={children} />\n  </motion.div>\n))`\n  & > div {\n    padding: 15px 24px 19px;\n  }\n`\n\nconst Icon = styled(props => (\n  <span {...props} role=\"img\" aria-label=\"Megaphone emoji\">\n    📣\n  </span>\n))`\n  margin: 0px 10px;\n`\n\nconst HideContentButton = styled(\n  ({ toggleContentVisibility, isContentVisible, ...props }) => (\n    <Button\n      {...props}\n      type=\"link\"\n      icon={isContentVisible ? <UpOutlined /> : <DownOutlined />}\n      onClick={toggleContentVisibility}\n    />\n  )\n)`\n  float: right;\n  position: absolute;\n  top: 11px;\n  right: 12px;\n  font-size: 12px;\n  border-width: 0px;\n  width: 20px;\n  height: 20px;\n  color: rgba(0, 0, 0, 0.45);\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\n\nconst Separator = styled.hr`\n  margin: 15px 0;\n  background-color: #e1e4e8;\n  height: 0.25em;\n  border: 0;\n`\n\nconst List = styled.ol`\n  padding-inline-start: 18px;\n  margin: 10px 0 0;\n`\n\nclass UsefulContentSection extends Component {\n  state = {\n    isContentVisible: false\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only re-render component if it has reloaded the diff on the parent\n    const hasLoaded = this.props.isLoading && !nextProps.isLoading\n    // or if the content has been hidden\n    const hasContentBeenHidden =\n      this.state.isContentVisible !== nextState.isContentVisible\n\n    return hasLoaded || hasContentBeenHidden\n  }\n\n  handleToggleContentVisibility = () =>\n    this.setState(({ isContentVisible }) => ({\n      isContentVisible: !isContentVisible\n    }))\n\n  getChangelog = ({ version }) => {\n    const { packageName } = this.props\n    const { to } = this.context\n    const { version: toVersion } = to\n    if (\n      packageName === PACKAGE_NAMES.RNW ||\n      packageName === PACKAGE_NAMES.RNM\n    ) {\n      return {\n        title: `React Native ${\n          packageName === PACKAGE_NAMES.RNW ? 'Windows' : 'macOS'\n        } ${toVersion} changelog`,\n        url: getChangelogURL({\n          packageName,\n          version: toVersion\n        }),\n        version: toVersion\n      }\n    }\n    if (packageName === PACKAGE_NAMES.BACKSTAGE) {\n      return {\n        title: `Backstage ${version} changelog`,\n        url: getChangelogURL({\n          packageName,\n          version\n        }),\n        version\n      }\n    }\n\n    const versionWithoutEndingZero = version.slice(0, 4)\n\n    return {\n      title: `React Native ${versionWithoutEndingZero} changelog`,\n      url: getChangelogURL({\n        packageName,\n        version: versionWithoutEndingZero\n      }),\n      version: versionWithoutEndingZero\n    }\n  }\n\n  render() {\n    const { isContentVisible } = this.state\n\n    const versions = getVersionsContentInDiff({\n      fromVersion: this.context.from.version,\n      toVersion: this.context.to.version,\n      versions: this.context.releases\n    })\n\n    const hasMoreThanOneRelease = versions.length > 1\n\n    return (\n      <Container isContentVisible={isContentVisible}>\n        <InnerContainer isContentVisible={isContentVisible}>\n          <Title\n            isContentVisible={isContentVisible}\n            onClick={this.handleToggleContentVisibility}\n          >\n            <Icon /> Useful content for upgrading\n          </Title>\n\n          <HideContentButton\n            isContentVisible={isContentVisible}\n            toggleContentVisibility={this.handleToggleContentVisibility}\n          />\n\n          <ContentContainer isContentVisible={isContentVisible}>\n            {versions.map(({ usefulContent, version }, key) => {\n              const changelog = this.getChangelog({ version })\n\n              const links = [...(usefulContent?.links || []), changelog]\n\n              return (\n                <Fragment key={key}>\n                  {key > 0 && <Separator />}\n\n                  {hasMoreThanOneRelease && (\n                    <h3>Release {changelog.version}</h3>\n                  )}\n\n                  <span>{usefulContent?.description}</span>\n\n                  <List>\n                    {links.map(({ url, title }, key) => (\n                      <li key={`${url}${key}`}>\n                        <Link href={url}>{title}</Link>\n                      </li>\n                    ))}\n                  </List>\n                </Fragment>\n              )\n            })}\n\n            <UpgradeSupportAlert />\n            {/*\n            <Separator />\n\n             <AppNameWarning /> */}\n          </ContentContainer>\n        </InnerContainer>\n      </Container>\n    )\n  }\n}\n\nUsefulContentSection.contextType = ReleasesContext\n\nexport default UsefulContentSection\n","import React from 'react'\nimport { Button, Popover as AntdPopover, Tooltip } from 'antd'\nimport styled from '@emotion/styled'\nimport DownloadFileButton from './DownloadFileButton'\nimport { removeAppPathPrefix } from '../../utils'\n\nconst Container = styled.div`\n  padding-right: 10px;\n`\n\nconst BinaryRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${({ index }) => (index % 2 === 0 ? '#fafbfc' : '#ffffff')};\n  color: #24292e;\n  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, Courier,\n    monospace;\n  font-size: 12px;\n  width: 500px;\n  max-width: 500px;\n  padding: 10px 15px;\n  border-bottom: 1px solid #e1e4e8;\n`\n\nconst Popover = styled(({ className, ...props }) => (\n  <AntdPopover overlayClassName={className} {...props} />\n))`\n  .ant-popover-inner-content {\n    padding: 0;\n    background: red;\n  }\n`\n\nconst BinaryList = ({ binaryFiles, toVersion, appName, packageName }) =>\n  binaryFiles.map(({ newPath }, index) => {\n    return (\n      <BinaryRow key={index} index={index}>\n        {removeAppPathPrefix(newPath, appName)}\n\n        <DownloadFileButton\n          visible={true}\n          version={toVersion}\n          path={newPath}\n          packageName={packageName}\n        />\n      </BinaryRow>\n    )\n  })\n\nconst BinaryDownload = ({\n  diff,\n  fromVersion,\n  toVersion,\n  appName,\n  packageName\n}) => {\n  const binaryFiles = diff.filter(\n    ({ hunks, type }) => hunks.length === 0 && type !== 'delete'\n  )\n\n  if (binaryFiles.length === 0) {\n    return null\n  }\n\n  return (\n    <Container>\n      <Popover\n        placement=\"bottomRight\"\n        content={\n          <BinaryList\n            binaryFiles={binaryFiles}\n            toVersion={toVersion}\n            appName={appName}\n            packageName={packageName}\n          />\n        }\n        trigger=\"click\"\n      >\n        <Tooltip\n          placement=\"top\"\n          title=\"Binaries updated within the version range\"\n        >\n          <Button>Binaries</Button>\n        </Tooltip>\n      </Popover>\n    </Container>\n  )\n}\n\nexport default BinaryDownload\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Radio } from 'antd'\n\nconst DiffViewStyleOptions = styled(\n  ({ handleViewStyleChange, diffViewStyle }) => (\n    <Radio.Group value={diffViewStyle}>\n      <Radio.Button\n        value=\"split\"\n        onChange={() => handleViewStyleChange('split')}\n      >\n        Split\n      </Radio.Button>\n      <Radio.Button\n        value=\"unified\"\n        onChange={() => handleViewStyleChange('unified')}\n      >\n        Unified\n      </Radio.Button>\n    </Radio.Group>\n  )\n)`\n  float: right;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 12px;\n  border-width: 0px;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n  &,\n  &:hover,\n  &:focus {\n    color: #24292e;\n  }\n`\nexport default DiffViewStyleOptions\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { keyframes, css } from '@emotion/core'\nimport Confetti from 'react-dom-confetti'\nimport { Popover } from 'antd'\n\nconst shake = keyframes`\n  0% {\n    transform: translate(0, 0);\n  }\n\n  10%, 90% {\n    transform: translate(0, -2px);\n  }\n\n  20%, 80% {\n    transform: translate(0, 3px);\n  }\n\n  30%, 50%, 70% {\n    transform: translate(0, -5px);\n  }\n\n  40%, 60% {\n    transform: translate(0, 5px);\n  }\n`\n\nconst CompletedFilesCounter = styled(\n  ({ completed, total, popoverContent, popoverCursorType, ...props }) => (\n    <div {...props}>\n      <Popover\n        content={popoverContent}\n        trigger=\"hover\"\n        placement=\"right\"\n        overlayStyle={{\n          position: 'fixed'\n        }}\n      >\n        <span className=\"completedAmount\">\n          {completed === 0 ? 1 : completed}\n        </span>{' '}\n        /{total}\n      </Popover>\n      <Confetti\n        active={completed === total}\n        config={{\n          elementCount: 200,\n          angle: 130,\n          startVelocity: 30\n        }}\n      />\n    </div>\n  )\n)`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background: #d5eafd;\n  padding: 10px;\n  border: 1px solid #1890ff;\n  border-radius: 20px;\n  color: #7dadda;\n  transform: ${({ completed }) =>\n    completed ? 'translateY(0px)' : 'translateY(70px)'};\n  display: flex;\n  align-self: flex-end;\n  transition: transform 0.3s;\n  cursor: ${({ popoverCursorType }) => popoverCursorType};\n  ${({ completed, total }) =>\n    completed === total &&\n    css`\n      transform: translateY(70px);\n      animation: ${shake};\n      animation-duration: 1.5s;\n    `}\n\n  .completedAmount {\n    color: #1890ff;\n  }\n`\n\nexport default CompletedFilesCounter\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Button as AntdButton } from 'antd'\nimport { getDiffURL } from '../../utils'\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  top: 10px;\n  font-size: 12px;\n  border-width: 0px;\n  height: 20px;\n`\n\nconst Button = styled(AntdButton)`\n  border-radius: 3px;\n  line-height: 30px;\n`\n\nconst RawDiffLinkButton = ({\n  packageName,\n  language,\n  fromVersion,\n  toVersion\n}) => {\n  if (fromVersion === '') {\n    return null\n  }\n  const diffURL = getDiffURL({\n    packageName,\n    language,\n    fromVersion,\n    toVersion\n  })\n  return (\n    <Container>\n      <Button href={diffURL} type=\"link\">\n        View raw diff\n      </Button>\n    </Container>\n  )\n}\n\nexport default RawDiffLinkButton\n","import { useEffect, useState } from 'react'\nimport { parseDiff } from 'react-diff-view'\nimport { getDiffURL, USE_YARN_PLUGIN } from '../utils'\nimport { useSettings } from '../SettingsProvider'\n\nconst delay = ms => new Promise(res => setTimeout(res, ms))\n\nconst movePackageJsonToTop = parsedDiff =>\n  parsedDiff.sort(({ newPath }) => (newPath.includes('package.json') ? -1 : 1))\n\nexport const useFetchDiff = ({\n  shouldShowDiff,\n  packageName,\n  language,\n  fromVersion,\n  toVersion\n}) => {\n  const {\n    settings: { [USE_YARN_PLUGIN]: useYarnPlugin }\n  } = useSettings()\n  const [isLoading, setIsLoading] = useState(true)\n  const [isDone, setIsDone] = useState(false)\n  const [diff, setDiff] = useState(undefined)\n\n  useEffect(() => {\n    const fetchDiff = async () => {\n      setIsLoading(true)\n      setIsDone(false)\n\n      const [response] = await Promise.all([\n        fetch(\n          getDiffURL({\n            packageName,\n            language,\n            fromVersion,\n            toVersion,\n            useYarnPlugin\n          })\n        ),\n        delay(300)\n      ])\n\n      const diff = await response.text()\n\n      setDiff(movePackageJsonToTop(parseDiff(diff)))\n\n      setIsLoading(false)\n      setIsDone(true)\n\n      return\n    }\n\n    if (shouldShowDiff) {\n      fetchDiff()\n    }\n  }, [shouldShowDiff, packageName, language, fromVersion, toVersion])\n\n  return {\n    isLoading,\n    isDone,\n    diff\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport styled from '@emotion/styled'\nimport { Alert } from 'antd'\nimport { motion, AnimatePresence, AnimateSharedLayout } from 'framer-motion'\nimport { withChangeSelect } from 'react-diff-view'\nimport 'react-diff-view/style/index.css'\nimport { getTransitionDuration } from '../../utils'\nimport DiffSection from './Diff/DiffSection'\nimport DiffLoading from './Diff/DiffLoading'\nimport UsefulContentSection from './UsefulContentSection'\nimport BinaryDownload from './BinaryDownload'\nimport ViewStyleOptions from './Diff/DiffViewStyleOptions'\nimport CompletedFilesCounter from './CompletedFilesCounter'\nimport RawDiffLinkButton from './RawDiffLinkButton'\nimport { useFetchDiff } from '../../hooks/fetch-diff'\n\nconst Container = styled.div`\n  width: 90%;\n`\n\nconst TopContainer = styled.div`\n  display: flex;\n  position: relative;\n  border-width: 1px;\n  margin-top: 16px;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nconst getDiffKey = ({ oldRevision, newRevision }) =>\n  `${oldRevision}${newRevision}`\n\nconst scrollToRef = ref => ref.current.scrollIntoView({ behavior: 'smooth' })\n\nconst DiffViewer = ({\n  packageName,\n  language,\n  fromVersion,\n  toVersion,\n  shouldShowDiff,\n  selectedChanges,\n  onToggleChangeSelection,\n  appName\n}) => {\n  const { isLoading, isDone, diff } = useFetchDiff({\n    shouldShowDiff,\n    packageName,\n    language,\n    fromVersion,\n    toVersion\n  })\n  const [completedDiffs, setCompletedDiffs] = useState([])\n  const [isGoToDoneClicked, setIsGoToDoneClicked] = useState(false)\n  const donePopoverPossibleOpts = {\n    done: {\n      content: 'Scroll to Done section',\n      cursorType: 's-resize'\n    },\n    top: {\n      content: 'Scroll to Top',\n      cursorType: 'n-resize'\n    }\n  }\n  const [donePopoverOpts, setDonePopoverOpts] = useState(\n    donePopoverPossibleOpts.done\n  )\n  const doneTitleRef = useRef(null)\n\n  const scrollToDone = () => scrollToRef(doneTitleRef)\n  const scrollToTop = () => window.scrollTo({ top: 0, behavior: 'smooth' })\n\n  const handleCompletedFilesCounterClick = () => {\n    setIsGoToDoneClicked(!isGoToDoneClicked)\n    if (isGoToDoneClicked) {\n      setDonePopoverOpts(donePopoverPossibleOpts.done)\n      scrollToTop()\n    } else {\n      setDonePopoverOpts(donePopoverPossibleOpts.top)\n      scrollToDone()\n    }\n  }\n\n  const handleCompleteDiff = diffKey => {\n    if (completedDiffs.includes(diffKey)) {\n      return setCompletedDiffs(prevCompletedDiffs =>\n        prevCompletedDiffs.filter(completedDiff => completedDiff !== diffKey)\n      )\n    }\n\n    setCompletedDiffs(prevCompletedDiffs => [...prevCompletedDiffs, diffKey])\n  }\n\n  const renderUpgradeDoneMessage = ({ diff, completedDiffs }) =>\n    diff.length === completedDiffs.length && (\n      <Alert\n        style={{ marginTop: 16 }}\n        message=\"Your upgrade is done 🎉🎉\"\n        type=\"success\"\n        showIcon\n        closable\n      />\n    )\n\n  const resetCompletedDiffs = () => setCompletedDiffs([])\n\n  const [diffViewStyle, setViewStyle] = useState(\n    localStorage.getItem('viewStyle') || 'split'\n  )\n\n  const handleViewStyleChange = newViewStyle => {\n    setViewStyle(newViewStyle)\n    localStorage.setItem('viewStyle', newViewStyle)\n  }\n\n  useEffect(() => {\n    if (!isDone) {\n      resetCompletedDiffs()\n    }\n  }, [isDone])\n\n  if (!shouldShowDiff) {\n    return null\n  }\n\n  if (isLoading) {\n    return (\n      <Container>\n        <AnimatePresence>\n          <DiffLoading />\n        </AnimatePresence>\n      </Container>\n    )\n  }\n\n  const diffSectionProps = {\n    diff: diff,\n    getDiffKey: getDiffKey,\n    completedDiffs: completedDiffs,\n    fromVersion: fromVersion,\n    toVersion: toVersion,\n    handleCompleteDiff: handleCompleteDiff,\n    selectedChanges: selectedChanges,\n    onToggleChangeSelection: onToggleChangeSelection\n  }\n\n  return (\n    <Container>\n      <AnimateSharedLayout>\n        <motion.div\n          initial={{ opacity: 0, translateY: 75 }}\n          animate={{ opacity: 1, translateY: 0 }}\n          transition={{ duration: getTransitionDuration(0.5) }}\n        >\n          <UsefulContentSection\n            isLoading={isLoading}\n            packageName={packageName}\n            fromVersion={fromVersion}\n            toVersion={toVersion}\n          />\n\n          <TopContainer>\n            <BinaryDownload\n              diff={diff}\n              fromVersion={fromVersion}\n              toVersion={toVersion}\n              appName={appName}\n              packageName={packageName}\n            />\n\n            <RawDiffLinkButton\n              packageName={packageName}\n              language={language}\n              fromVersion={fromVersion}\n              toVersion={toVersion}\n            />\n\n            <ViewStyleOptions\n              handleViewStyleChange={handleViewStyleChange}\n              diffViewStyle={diffViewStyle}\n            />\n          </TopContainer>\n\n          <DiffSection\n            {...diffSectionProps}\n            packageName={packageName}\n            isDoneSection={false}\n            diffViewStyle={diffViewStyle}\n            appName={appName}\n          />\n\n          {renderUpgradeDoneMessage({ diff, completedDiffs })}\n\n          <DiffSection\n            {...diffSectionProps}\n            packageName={packageName}\n            isDoneSection={true}\n            title=\"Done\"\n            appName={appName}\n            doneTitleRef={doneTitleRef}\n          />\n        </motion.div>\n      </AnimateSharedLayout>\n\n      <CompletedFilesCounter\n        completed={completedDiffs.length}\n        total={diff.length}\n        onClick={handleCompletedFilesCounterClick}\n        popoverContent={donePopoverOpts.content}\n        popoverCursorType={donePopoverOpts.cursorType}\n      />\n    </Container>\n  )\n}\n\nexport default withChangeSelect({ multiple: true })(DiffViewer)\n","import React, { useState } from 'react'\nimport { Popover, Button, Checkbox } from 'antd'\nimport { SHOW_LATEST_RCS, USE_YARN_PLUGIN } from '../../utils'\nimport styled from '@emotion/styled'\nimport { useSettings } from '../../SettingsProvider'\n\nconst SettingsButton = styled(Button)`\n  color: initial;\n`\n\nconst SettingsIcon = styled(props => <span {...props}>⚙️</span>)`\n  font-family: initial;\n`\nconst Settings = () => {\n  const { settings, setSettings } = useSettings()\n  const [popoverVisibility, setVisibility] = useState(false)\n\n  const handleClickChange = visibility => {\n    setVisibility(visibility)\n  }\n\n  const toggleShowLatestRCs = () =>\n    setSettings({\n      ...settings,\n      [SHOW_LATEST_RCS]: !settings[SHOW_LATEST_RCS]\n    })\n\n  const toggleUseYarnPlugin = () =>\n    setSettings({\n      ...settings,\n      [USE_YARN_PLUGIN]: !settings[USE_YARN_PLUGIN]\n    })\n\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      content={\n        <>\n          <div>\n            <Checkbox\n              defaultChecked={settings[SHOW_LATEST_RCS]}\n              onChange={toggleShowLatestRCs}\n            >\n              {SHOW_LATEST_RCS}\n            </Checkbox>\n          </div>\n          <div>\n            <Checkbox\n              defaultChecked={settings[USE_YARN_PLUGIN]}\n              onChange={toggleUseYarnPlugin}\n            >\n              {USE_YARN_PLUGIN}\n            </Checkbox>\n          </div>\n        </>\n      }\n      trigger=\"click\"\n      visible={popoverVisibility}\n      onVisibleChange={handleClickChange}\n    >\n      <SettingsButton icon={<SettingsIcon />} />\n    </Popover>\n  )\n}\n\nexport default Settings\n","import React, { useState, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport { Card } from 'antd'\nimport GitHubButton from 'react-github-btn'\n// import ReactGA from 'react-ga'\nimport VersionSelector from '../common/VersionSelector'\nimport DiffViewer from '../common/DiffViewer'\nimport Settings from '../common/Settings'\nimport { homepage } from '../../../package.json'\nimport logo from '../../assets/logo.svg'\nimport { useGetLanguageFromURL } from '../../hooks/get-language-from-url'\nimport { useGetPackageNameFromURL } from '../../hooks/get-package-name-from-url'\nimport { deviceSizes } from '../../utils/device-sizes'\nimport { ReleasesProvider } from '../../ReleaseProvider'\nimport { SettingsProvider } from '../../SettingsProvider'\n\nconst Page = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding-top: 30px;\n`\n\nconst Container = styled(Card)`\n  width: 90%;\n  border-radius: 3px;\n  border-color: #e8e8e8;\n`\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media ${deviceSizes.tablet} {\n    flex-direction: row;\n  }\n`\n\nconst LogoImg = styled.img`\n  width: 50px;\n  margin-bottom: 15px;\n\n  @media ${deviceSizes.tablet} {\n    width: 50px;\n  }\n`\n\nconst TitleHeader = styled.h1`\n  margin: 0;\n  margin-left: 15px;\n`\n\nconst TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n`\n\nconst SettingsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n  margin-bottom: 8px;\n  flex: 1;\n`\n\nconst UpdateDocsLink = styled.div`\n  flex: 1;\n`\n\nconst StarButton = styled(({ className, ...props }) => (\n  <div className={className}>\n    <GitHubButton {...props} />\n  </div>\n))`\n  margin-top: 10px;\n  margin-left: 15px;\n  margin-right: auto;\n`\n\nconst Home = () => {\n  const {\n    packageName: defaultPackageName,\n    isPackageNameDefinedInURL\n  } = useGetPackageNameFromURL()\n  const defaultLanguage = useGetLanguageFromURL()\n  const [fromVersion, setFromVersion] = useState('')\n  const [toVersion, setToVersion] = useState('')\n  const [shouldShowDiff, setShouldShowDiff] = useState(false)\n  // const [releases, setReleases] = useState({})\n  const [appName /* setAppName */] = useState('')\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      // ReactGA.initialize('UA-136307971-1')\n      // ReactGA.pageview('/')\n    }\n  }, [])\n\n  const handleShowDiff = ({ fromVersion, toVersion }) => {\n    if (fromVersion === toVersion) {\n      return\n    }\n\n    setFromVersion(fromVersion)\n    setToVersion(toVersion)\n    setShouldShowDiff(true)\n  }\n\n  return (\n    <SettingsProvider>\n      <ReleasesProvider packageName={defaultPackageName}>\n        <Page>\n          <Container>\n            <HeaderContainer>\n              <TitleContainer>\n                <LogoImg\n                  alt=\"Backstage logo\"\n                  title=\"Backstage logo\"\n                  src={logo}\n                />\n\n                <a href={homepage}>\n                  <TitleHeader>Backstage Upgrade Helper</TitleHeader>\n                </a>\n              </TitleContainer>\n              <SettingsContainer>\n                <StarButton\n                  href=\"https://github.com/backstage/upgrade-helper\"\n                  data-icon=\"octicon-star\"\n                  data-show-count=\"true\"\n                  aria-label=\"Star backstage/upgrade-helper on GitHub\"\n                >\n                  Star\n                </StarButton>\n\n                <UpdateDocsLink>\n                  <a href=\"https://backstage.io/docs/getting-started/keeping-backstage-updated\">\n                    Keeping Backstage Updated\n                  </a>\n                </UpdateDocsLink>\n\n                <Settings />\n              </SettingsContainer>\n            </HeaderContainer>\n\n            <VersionSelector\n              key={defaultPackageName}\n              showDiff={handleShowDiff}\n              fromVersion={fromVersion}\n              toVersion={toVersion}\n              packageName={defaultPackageName}\n              language={defaultLanguage}\n              isPackageNameDefinedInURL={isPackageNameDefinedInURL}\n            />\n          </Container>\n          <DiffViewer\n            shouldShowDiff={shouldShowDiff}\n            fromVersion={fromVersion}\n            toVersion={toVersion}\n            appName={appName}\n            packageName={defaultPackageName}\n            language={defaultLanguage}\n          />\n        </Page>\n      </ReleasesProvider>\n    </SettingsProvider>\n  )\n}\n\nexport default Home\n","import { PACKAGE_NAMES } from '../constants'\n\nexport const useGetPackageNameFromURL = () => {\n  const urlParams = new URLSearchParams(window.location.search)\n\n  const packageNameFromURL = urlParams.get('package')\n  const packageNames = Object.values(PACKAGE_NAMES)\n\n  if (!packageNameFromURL || !packageNames.includes(packageNameFromURL)) {\n    return {\n      packageName: PACKAGE_NAMES.BACKSTAGE,\n      isPackageNameDefinedInURL: false\n    }\n  }\n\n  return {\n    packageName: packageNameFromURL,\n    isPackageNameDefinedInURL: true\n  }\n}\n","import { LANGUAGE_NAMES } from '../constants'\n\nexport const useGetLanguageFromURL = () => {\n  const urlParams = new URLSearchParams(window.location.search)\n\n  const languageFromURL = urlParams.get('language')\n  const languageNames = Object.values(LANGUAGE_NAMES)\n\n  if (!languageFromURL || !languageNames.includes(languageFromURL)) {\n    return LANGUAGE_NAMES.CPP\n  }\n\n  return languageFromURL\n}\n","import React from 'react'\nimport Home from './components/pages/Home'\n\nconst App = () => <Home />\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}